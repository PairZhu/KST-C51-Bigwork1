C51 COMPILER V9.02   LCD1602                                                               11/05/2020 23:08:28 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN LCD1602.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Hardware\LCD1602.c BROWSE INCDIR(.\Hardware) DEBUG OBJECTEXTEND PRINT(.\LCD
                    -1602.lst) OBJECT(LCD1602.obj)

line level    source

   1          #include "LCD1602.h"
   2          
   3          /* 等待液晶准备好 */
   4          void LcdWaitReady()
   5          {
   6   1          u8 sta;
   7   1          LCD1602_DB = 0xFF;
   8   1          LCD1602_RS = 0;
   9   1          LCD1602_RW = 1;
  10   1          do
  11   1          {
  12   2              LCD1602_E = 1;
  13   2              sta = LCD1602_DB; //读取状态字
  14   2              LCD1602_E = 0;
  15   2          } while (sta & 0x80); //bit7 等于 1 表示液晶正忙，重复检测直到其等于 0 为止
  16   1      }
  17          /* 向 LCD1602 液晶写入一字节命令，cmd-待写入命令值 */
  18          void LcdWriteCmd(u8 cmd)
  19          {
  20   1          LcdWaitReady();
  21   1          LCD1602_RS = 0;
  22   1          LCD1602_RW = 0;
  23   1          LCD1602_DB = cmd;
  24   1          LCD1602_E = 1;
  25   1          LCD1602_E = 0;
  26   1      }
  27          /* 向 LCD1602 液晶写入一字节数据，dat-待写入数据值 */
  28          void LcdWriteDat(unsigned char dat)
  29          {
  30   1          LcdWaitReady();
  31   1          LCD1602_RS = 1;
  32   1          LCD1602_RW = 0;
  33   1          LCD1602_DB = dat;
  34   1          LCD1602_E = 1;
  35   1          LCD1602_E = 0;
  36   1      }
  37          /* 设置显示 RAM 起始地址，亦即光标位置，(x,y)-对应屏幕上的字符坐标 */
  38          void LcdSetCursor(u8 x, u8 y)
  39          {
  40   1          unsigned char addr;
  41   1          if (y == 0)          //由输入的屏幕坐标计算显示 RAM 的地址
  42   1              addr = 0x00 + x; //第一行字符地址从 0x00 起始
  43   1          else
  44   1              addr = 0x40 + x;      //第二行字符地址从 0x40 起始
  45   1          LcdWriteCmd(addr | 0x80); //设置 RAM 地址
  46   1      }
  47          /* 在液晶上显示字符串，(x,y)-对应屏幕上的起始坐标，
  48          str-字符串指针，len-需显示的字符长度 */
  49          void LcdShowStr(u8 x, u8 y, unsigned char *str)
  50          {
  51   1          LcdSetCursor(x, y); //设置起始地址
  52   1          while (*str)       //连续写入 len 个字符数据
  53   1          {
  54   2              LcdWriteDat(*str++); //先取 str 指向的数据，然后 str 自加 1
C51 COMPILER V9.02   LCD1602                                                               11/05/2020 23:08:28 PAGE 2   

  55   2          }
  56   1      }
  57          /*清屏*/
  58          void LcdClear()
  59          {
  60   1          LcdWriteCmd(0x01);
  61   1      }
  62          /* 初始化 1602 液晶 */
  63          void InitLcd1602(bit input)
  64          {
  65   1          LcdWriteCmd(0x38); //16*2 显示，5*7 点阵，8 位数据接口
  66   1          if(input)
  67   1              LcdWriteCmd(0x0F);
  68   1          else
  69   1              LcdWriteCmd(0x0C); //显示器开，光标关闭
  70   1          LcdWriteCmd(0x06); //文字不动，地址自动+1
  71   1          LcdClear();
  72   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    138    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
